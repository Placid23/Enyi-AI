// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An AI agent that interprets user queries to understand the intent and context.
 *
 * - interpretUserQuery - A function that handles the user query interpretation process.
 * - InterpretUserQueryInput - The input type for the interpretUserQuery function.
 * - InterpretUserQueryOutput - The return type for the interpretUserQuery function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const InterpretUserQueryInputSchema = z.object({
  query: z.string().describe('The user query to interpret.'),
  context: z.string().optional().describe('Optional context for the query.'),
});
export type InterpretUserQueryInput = z.infer<typeof InterpretUserQueryInputSchema>;

const InterpretUserQueryOutputSchema = z.object({
  intent: z.string().describe('The intent of the user query.'),
  relevantContext: z.string().optional().describe('The relevant context for the query, if any.'),
  requiresContext: z.boolean().describe('Whether the query requires additional context.'),
});
export type InterpretUserQueryOutput = z.infer<typeof InterpretUserQueryOutputSchema>;

export async function interpretUserQuery(input: InterpretUserQueryInput): Promise<InterpretUserQueryOutput> {
  return interpretUserQueryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'interpretUserQueryPrompt',
  input: {schema: InterpretUserQueryInputSchema},
  output: {schema: InterpretUserQueryOutputSchema},
  prompt: `You are an AI assistant that interprets user queries to understand their intent and context.

  Your job is to determine the intent of the query, whether it requires additional context, and if so, what context is relevant.

  Query: {{{query}}}
  Context: {{{context}}}

  Analyze the query and the context (if any) and provide the following information:

  - intent: A brief description of the user's intent.
  - relevantContext: If the query requires additional context, describe what context would be relevant. Otherwise, leave blank.
  - requiresContext: true if the query requires additional context, false otherwise.
  `,
});

const interpretUserQueryFlow = ai.defineFlow(
  {
    name: 'interpretUserQueryFlow',
    inputSchema: InterpretUserQueryInputSchema,
    outputSchema: InterpretUserQueryOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
